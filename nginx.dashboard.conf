# nginx conf for Repustate web.

upstream dashboard_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response (in case the Unicorn master nukes a
    # single worker for timing out).
    server 127.0.0.1:8001 fail_timeout=0;
}

server {
    if ($host = dashboard.repustate.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen  80;
    server_name dashboard.repustate.com;
    return 301 https://$host$request_uri;


}
 
server {
 
    listen 443 ssl;
    server_name dashboard.repustate.com;
    
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    ssl_session_tickets off; 
    ssl_stapling on; 
    ssl_stapling_verify on; 
    ssl_dhparam /home/ubuntu/ssl/dhparams.pem;
    
    client_max_body_size 10M;
 
	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

    ## Deny illegal Host headers
    if ($host !~* ^dashboard.repustate.com$ ) {
        return 444;
    }
    
    location /favicon.ico {
        alias /home/ubuntu/repustate.com/dashboard/staticfiles/images/favicon.ico;
    }

    location /robots.txt {
        alias /home/ubuntu/repustate.com/dashboard/staticfiles/robots.txt;
    }
    
    location /staticfiles {
        alias /home/ubuntu/repustate.com/dashboard/staticfiles/;
        expires 30d;

        gzip on;
        gzip_vary on;
        gzip_proxied any;
        gzip_types image/svg+xml images/jpeg images/png application/javascript application/json text/javascript text/css text/plain application/x-javascript;
        gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    }

    location / {
        # an HTTP header important enough to have its own Wikipedia entry:
        #   http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 
        # enable this if and only if you use HTTPS, this helps Rack
        # set the proper protocol for doing redirects:
        proxy_set_header X-Forwarded-Proto https;
 
        # pass the Host: header from the client right along so redirects
        # can be set properly within the Rack application
        proxy_set_header Host $http_host;
 
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;

        proxy_pass http://dashboard_server;
    }
    
    ssl on;
    ssl_certificate /etc/letsencrypt/live/dashboard.repustate.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dashboard.repustate.com/privkey.pem; # managed by Certbot
}
